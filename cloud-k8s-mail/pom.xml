<?xml version="1.0" encoding="UTF-8"?>

<!--cloud-k8s-mail-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>cloud-k8s-root</artifactId>
        <groupId>me.isaac</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>cloud-k8s-mail</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>cloud-k8s-mail</name>
    <description>cloud-k8s-mail</description>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-sleuth</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-zipkin</artifactId>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <!--打包后的Jar包文件名-->
        <finalName>cloud-k8s-mail</finalName>
        <plugins>
            <!--指定启动类，将依赖打成外部jar包-->
            <!--指定配置文件，将resources打成外部resources-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <!--生成的jar中，不要包含pom.xml和pom.properties文件-->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <!--是否要把第三方jar加入到类构建路径-->
                            <addClasspath>true</addClasspath>
                            <!--外部依赖jar包的最终位置-->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!--项目启动类-->
                            <mainClass>me.isaac.demo.MailApplication</mainClass>
                        </manifest>
                        <!--指定配置文件目录，这样jar运行时会去找到同目录下的resources文件夹下查找-->
                        <manifestEntries>
                            <Class-Path>resources/</Class-Path>
                        </manifestEntries>
                    </archive>
                    <!--打包时忽略的文件（也就是不打进jar包里的文件）-->
                    <excludes>
                        <exclude>*.yml</exclude>
                        <exclude>*.xml</exclude>
                        <exclude>mqConfig/*.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!--拷贝依赖到jar外面的lib目录-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-lib</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <!--test (default) scope gives all dependencies-->
                            <includeScope>test</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--拷贝资源文件 外面的resources目录-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!--资源文件输出目录-->
                            <outputDirectory>${project.build.directory}/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>